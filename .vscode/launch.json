{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Debug with GDB",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/twoWindows",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "build", // Optional: Specify a build task if needed
            "miDebuggerPath": "gdb" // Specify the path to the GDB executable
            ]
        },
        {
            "type": "lldb-vscode",
            "request": "launch",
            "name": "Debug",
            "program": "${workspaceRoot}/twoWindows",
            "args": [],
            "env": [],
            "cwd": "${workspaceRoot}"
        },
        {},
        {
            "name": "C++ Debug with LLDB",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/build/twoWindows", // Specify the path to your compiled executable
            "args": [], // Command-line arguments for your program
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "lldb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for lldb",
                    "text": "enable",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "build", // Replace with the name of your build task defined in tasks.json
            "programPath": "${workspaceFolder}/build/twoWindows", // Specify the path to your compiled executable (again)
            "linux": {
                "miDebuggerPath": "/usr/bin/lldb", // Path to your LLDB executable (Linux)
                "stopAtEntry": true
            },
            "osx": {
                "miDebuggerPath": "/usr/bin/lldb", // Path to your LLDB executable (macOS)
                "stopAtEntry": true
            },
            "windows": {
                "miDebuggerPath": "C:/Program Files/LLVM/bin/lldb.exe", // Path to your LLDB executable (Windows)
                "stopAtEntry": true
            }
        }
    ]
}